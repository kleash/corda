#!/usr/bin/python

import re
import sys
import keyring
import getpass

from jira import JIRA
from git import Repo

#-------------------------------------------------------------------------------

def jiraLogin(user) :
    password = keyring.get_password ('jira', user)

    if not password:
        password = getpass.getpass("Please enter your JIRA password, " +
                "it will be stored in your OS Keyring: ")
        keyring.set_password ('jira', user, password)

    return JIRA("https://r3-cev.atlassian.net", auth=(user, password))

#-------------------------------------------------------------------------------


jiraMatch = re.compile("(CORDA-\d+|ENT-\d+)")
repo = Repo(".", search_parent_directories = True)

jirasFromCommits = []
jirasFromJira = []

for commit in list (repo.iter_commits ("%s.." % (sys.argv[1]))) :
    jirasFromCommits += jiraMatch.findall(commit.summary)

jira = jiraLogin(sys.argv[2])

# Cope with Jira REST API paginating query results
offset = 0
results = 50
while (results == 50) :
    issues = jira.search_issues('project in (Corda, Ent) And fixVersion in ("Corda 3.3") and status in (Done)', startAt=offset)
    results = len(issues)
    offset += 50

    jirasFromJira += [ commit.key for commit in issues ]

commitsInRelease = set(jirasFromCommits).union(jirasFromJira)
for commit in commitsInRelease :
    print commit



#customFieldsByName = {}
#customFieldsByKey = {}

#for x in jira.fields() :
#    if x['custom'] :
#        customFieldsByName[x['name']] = x['key']
#        customFieldsByKey[x['key']] = x['name']

#masterTests = jira.search_issues("Project=R3T AND \"Epic Link\" = \"Network Services\" AND labels in (MasterTest)")

#for test in masterTests :
#    fields = {
#            'project' : test.raw['fields']['project'],
#            'summary' : test.fields.summary,
#            'description' : test.fields.description,
#            'issuetype' : test.raw['fields'][u'issuetype'],
#            customFieldsByName['Feature Team'] : test.raw['fields'][customFieldsByName['Feature Team']],
#            customFieldsByName['Epic Link'] : test.raw['fields'][customFieldsByName['Epic Link']],
#            customFieldsByName['Target Version/s'] : [{ "name" : "Corda Network Services 0.1 RC03" }],
#            'labels' : [ "AutoGenerated" ]
#    }

#    new_issue = jira.create_issue(fields)

#    print "Created Issue " + new_issue.key

#-------------------------------------------------------------------------------
